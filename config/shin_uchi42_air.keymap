#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    quick-tap-ms = <200>;
    require-prior-idle-ms = <200>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        bluetooth_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <45 44>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <14 15>;
        };

        shift+tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <26 27>;
        };

        right-brace {
            bindings = <&kp PIPE>;
            key-positions = <6 17>;
            layers = <1>;
        };

        right-bracket {
            bindings = <&kp BACKSLASH>;
            key-positions = <7 18>;
        };

        left-device {
            bindings = <&tog 6>;
            key-positions = <11 12 13 14>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <12 11>;
        };

        toggle-default {
            bindings = <&tog 0>;
            key-positions = <17 18 19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
                         &kp Q  &kp W           &kp U             &kp COMMA         &kp DOT       &kp F     &kp D                &kp R             &kp Y                     &kp P
&kp ESCAPE               &kp A  &kp E           &mt LEFT_SHIFT O  &mt LEFT_SHIFT I  &kp MINUS     &kp M     &mt RIGHT_SHIFT T    &mt RSHIFT K      &kp N                     &kp S       &kp QUESTION
&kp LS(INTERNATIONAL_1)  &kp Z  &kp X           &kp C             &kp V             &kp SEMI      &kp G     &kp H                &kp J             &kp L                     &kp SLASH   &kp B
&tog 6                   &to 3  &mt LCTRL LEFT  &lt 1 LANG2       &kp SPACE         &mt LALT DEL  &kp BSPC  &mt RS(RCTRL) ENTER  &lt 2 LANGUAGE_1  &mt LEFT_WIN RIGHT_ARROW  &bt BT_PRV  &bt BT_NXT
            >;
        };

        arrow_num {
            bindings = <
              &kp LS(NUMBER_6)  &kp N7  &kp N8  &kp N9  &kp HASH          &kp COLON          &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp PERCENT           &kp LS(N7)
&kp EQUAL     &kp NUMBER_0      &kp N4  &kp N5  &kp N6  &kp PLUS          &kp UNDER          &kp ASTERISK     &kp UP_ARROW       &kp LEFT_PARENTHESIS  &kp LS(NUMBER_2)  &kp EXCL
&kp LS(INT3)  &kp LEFT_BRACE    &kp N1  &kp N2  &kp N3  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LEFT_ARROW   &kp DOWN_ARROW     &kp RIGHT_ARROW       &kp KP_DIVIDE     &kp DOLLAR
&trans        &trans            &trans  &trans  &trans  &trans            &trans             &trans           &trans             &trans                &trans            &trans
            >;
        };

        arrow-num-kp {
            bindings = <
              &kp LS(NUMBER_6)  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp HASH          &kp COLON          &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp PERCENT           &kp LS(N7)
&kp EQUAL     &kp KP_NUMBER_0   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS          &kp UNDER          &kp ASTERISK     &kp UP_ARROW       &kp LEFT_PARENTHESIS  &kp LS(NUMBER_2)  &kp EXCL
&kp LS(INT3)  &kp LEFT_BRACE    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LEFT_ARROW   &kp DOWN_ARROW     &kp RIGHT_ARROW       &kp KP_DIVIDE     &kp DOLLAR
&trans        &trans            &trans           &trans           &trans           &trans            &trans             &trans           &trans             &trans                &trans            &trans
            >;
        };

        default-us {
            bindings = <
                         &kp Q  &kp W           &kp U             &kp COMMA         &kp DOT            &kp F     &kp D                &kp R             &kp Y                     &kp P
&kp ESCAPE               &kp A  &kp E           &mt LEFT_SHIFT O  &mt LEFT_SHIFT I  &kp MINUS          &kp M     &mt RIGHT_SHIFT T    &mt RSHIFT K      &kp N                     &kp S       &kp QUESTION
&kp LS(INTERNATIONAL_1)  &kp Z  &kp X           &kp C             &kp V             &kp SEMI           &kp G     &kp H                &kp J             &kp L                     &kp SLASH   &kp B
&tog 6                   &to 7  &mt LCTRL LEFT  &lt 4 LANG2       &kp SPACE         &mt LA(LCTRL) DEL  &kp BSPC  &mt RS(RCTRL) ENTER  &lt 4 LANGUAGE_1  &mt LEFT_WIN RIGHT_ARROW  &bt BT_PRV  &bt BT_NXT
            >;
        };

        arrow-num-us {
            bindings = <
           &kp AMPS  &kp N7  &kp N8  &kp N9  &kp HASH   &kp PLUS      &kp LBKT              &kp LEFT_BRACE  &kp PERCENT            &kp APOSTROPHE
&kp CARET  &kp N0    &kp N4  &kp N5  &kp N6  &kp TILDE  &kp EQUAL     &kp LEFT_PARENTHESIS  &kp UP_ARROW    &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp EXCLAMATION
&kp PIPE   &kp AT    &kp N1  &kp N2  &kp N3  &kp COLON  &kp ASTERISK  &kp LEFT              &kp DOWN        &kp RIGHT              &kp BSLH           &kp DOLLAR
&trans     &trans    &trans  &trans  &trans  &trans     &trans        &trans                &trans          &trans                 &trans             &trans
            >;
        };

        others {
            bindings = <
        &kp F2  &kp F3  &kp F4   &kp F5   &kp F6   &kp PRINTSCREEN  &kp HOME  &kp UP            &kp PG_UP      &kp C_VOL_DN
&kp F1  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &kp C_PREV       &kp LEFT  &kp DOWN          &kp RIGHT      &kp C_MUTE            &kp C_VOL_UP
&kp F7  &none   &none   &none    &none    &none    &kp C_NEXT       &kp END   &kp C_PLAY_PAUSE  &kp PAGE_DOWN  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC
&trans  &trans  &trans  &trans   &trans   &trans   &trans           &trans    &trans            &trans         &trans                &trans
            >;
        };

        left-device {
            bindings = <
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        gaming {
            bindings = <
                &kp N0            &kp Q         &kp W         &kp E      &kp NUMBER_1  &kp Y   &kp U   &kp I      &kp O    &kp P
&kp TAB         &kp LEFT_CONTROL  &kp A         &kp S         &kp D      &kp F         &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&kp LEFT_SHIFT  &none             &none         &none         &none      &kp NUMBER_3  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
&trans          &to 0             &kp NUMBER_1  &kp NUMBER_2  &kp SPACE  &trans        &trans  &trans  &trans     &trans   &trans    &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        others {
            if-layers = <1 2>;
            then-layer = <5>;
        };
    };
};
